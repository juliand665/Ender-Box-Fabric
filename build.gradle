plugins {
	id 'fabric-loom'
	id 'maven-publish'
	id 'org.jetbrains.kotlin.jvm'
	id 'com.wynprice.cursemaven'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}


repositories {
	maven { url "http://maven.fabricmc.net/" }
	maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
	maven { url "https://curseforge.com/api/maven/" }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
	//modCompile "com.jamieswhiteshirt:developer-mode:${project.developer_mode_version}"
	modCompile "io.github.prospector:modmenu:${project.mod_menu_version}"
	// wish these worked, but curseforge's maven is just broken
	//modCompile "resolution-control:resolution-control:${project.resolution_control_version}"
	//modCompile "dynamic-fps:dynamic-fps:${project.dynamic_fps_version}"
	//modCompile "tooltip-autowrap:tooltipwrap:${project.tooltip_autowrap_version}"
	modCompile curse.resolve("resolution-control", 2871026)
	modCompile curse.resolve("dynamic-fps", 2871200)
	//modCompile curse.resolve("tooltip-autowrap", 2841166)

	// Nullability Annotations (in decompiled mc code)
	implementation "com.google.code.findbugs:jsr305:${project.findbugs_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"
